<?xml version="1.0" encoding="UTF-8"?>
<knimeNode icon="./rest-put.png" type="Manipulator" xmlns="http://knime.org/node/v2.10" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://knime.org/node/v2.10 http://knime.org/node/v2.10.xsd">
    <name>PUT Request</name>
    
    <shortDescription>PUT REST client</shortDescription>
    
    <fullDescription>
        <intro>PUT the content using the Apache CXF client.</intro>
        
        <tab name="Connection Settings">
            <option name="URI">The column or the actual constant URI</option>
            <option name="Delay (ms)">Delay between response and the next request in milliseconds</option>
            <option name="Concurrency">Number of concurrent requests</option>
            <option name="Ignore hostname mismatches">Trust the certificate even if it was generated for a different host.</option>
            <option name="Trust all certificates">Trust all certificates regardless their origin or expiration date</option>
            <option name="Follow redirects">Follows redirects (on <tt>3xx</tt> status codes) when checked</option>
            <option name="Send large data in chunks">
                Specifies whether HTTP Chunked Transfer Encoding is allowed to be used by the node. If enabled, messages
                with a large body size are being sent to the server in a series of chunks.
            </option>
            <option name="Timeout (s)">Timeout in seconds</option>
            <option name="Body">Name of the response body column</option>
        </tab>
        <tab name="Authentication">
            <option name="Type">None/Basic/Digest</option>
            <option name="Use credentials">Uses the selected credentials instead of Username/Password</option>
            <option name="Username">User name.</option>
            <option name="Password">Password</option>
        </tab>
        <tab name="Request Headers">
            <option name="Merge">Adds header values from the selected template</option>
            <option name="Reset">Removes actual headers and adds the values from the template.</option>
            <option name="Header key">constant key</option>
            <option name="Header value">the value (or reference to flow variable, column, credential name/password)</option>
            <option name="Header kind">value Flow variable/Constant/Column or Credential name/password</option>
            <!-- option name="Header type">in case we need to convert the type to string, the conversion option</option-->
        </tab>
        <tab name="Request Body">
        	<option name="Use column's content as body">Use the selected column's content as the body of the request.</option>
        	<option name="Use constant body">Use the specified content below as the body of the request.</option>
        </tab>
        <tab name="Response Headers">
            <option name="Extract all fields">Extracts all header fields (present in the first response)</option>
            <option name="Header key">The name of the header value to extract</option>
            <option name="Header type">Convert the header value to this type</option>
        </tab>
        <tab name="Error Handling">
            <option name="Fail on connection problems (e.g. timeout, certificate errors, â€¦)">
                This option describes what should happen if there was a problem establishing the connection to the
                server. The node either fails in execution or outputs status code and error message in the corresponding
                row.
            </option>
            <option name="Server-side errors (HTTP 5XX)">
                These options describe what should happen if a response with a 5XX status code is received. These
                status codes usually describe errors on the server side.
            </option>
            <option name="Client-side errors (HTTP 4XX)">
                These options describe what should happen if a response with a 4XX status code is received. These status
                codes usually describe client-side errors such as an incorrect web address.
            </option>
            <option name="Fail node execution or output missing value">
                This option describes what should happen after a request has failed. The node either fails in execution
                or outputs a missing value in the row of the output table that corresponds to this request. This option can
                be set separately for server- and client-side errors.
            </option>
            <option name="Retry on error">
                Specifies whether the node should retry a request if the initial request received a response indicating
                a server-side error.
            </option>
            <option name="Number of retries">
                The maximum number of retries to perform for server errors (count does not include the initial request).
            </option>
            <option name="Retry delay">
                The delay to apply between the first request and the first retry. For each subsequent retry, the delay
                is doubled.
            </option>
            <option name="Rate-limiting error (HTTP 429)">
                This status code can be returned by a server to indicate that the rate of incoming requests has been too
                high.
            </option>
            <option name="Pause execution">
                In case of a rate-limiting error, wait for the set amount of time before retrying the request. Note that
                this delay is static and does not increase with subsequent attempts, neither does it count as retries
                for server-side errors.
            </option>
        </tab>
    </fullDescription>
    
    <ports>
        <inPort index="0" name="Table">Data table containing the variable parameters of the requests.</inPort>
        <outPort index="0" name="PUT results">Data table containing additional columns from the responses.</outPort>
    </ports>    
    <!-- views>
        <view index="0" name="name of first view">Description of first view...</view>
    </views-->
</knimeNode>
